import{_ as t,c as l,a,b as e,d as n,e as o,o as i,r as c}from"./app-Dgm3qbd6.js";const r={},u={href:"https://babeljs.io",target:"_blank",rel:"noopener noreferrer"};function d(k,s){const p=c("ExternalLinkIcon");return i(),l("div",null,[s[3]||(s[3]=a(`<h1 id="react设计原理" tabindex="-1"><a class="header-anchor" href="#react设计原理"><span>React设计原理</span></a></h1><h2 id="react源码中的几种关键数据结构" tabindex="-1"><a class="header-anchor" href="#react源码中的几种关键数据结构"><span>React源码中的几种关键数据结构</span></a></h2><h3 id="element对象" tabindex="-1"><a class="header-anchor" href="#element对象"><span>element对象</span></a></h3><p>element对象是对UI的描述。</p><div class="language-jsx line-numbers-mode" data-highlighter="prismjs" data-ext="jsx" data-title="jsx"><pre class="language-jsx"><code><span class="line"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token punctuation">(</span></span>
<span class="line">    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>app<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">      </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text">123</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span><span class="token plain-text"></span>
<span class="line">    </span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5)),e("p",null,[s[1]||(s[1]=n("在 ")),e("a",u,[s[0]||(s[0]=n("https://babeljs.io")),o(p)]),s[2]||(s[2]=n(" 这个网站可以预览转换结果，_jsx方法就是来生成element对象的，它的执行结果才是element对象。"))]),s[4]||(s[4]=a(`<div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">/*#__PURE__*/</span> 这个注释可以帮助webpack做tree shaking</span>
<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> jsx <span class="token keyword">as</span> _jsx <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;react/jsx-runtime&quot;</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">App</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">return</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span><span class="token string">&quot;div&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&quot;app&quot;</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token comment">/*#__PURE__*/</span><span class="token function">_jsx</span><span class="token punctuation">(</span><span class="token string">&quot;span&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">children</span><span class="token operator">:</span> <span class="token string">&quot;123&quot;</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>类型声明文件</p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">ReactElementType</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 元素类型</span></span>
<span class="line">    $$<span class="token keyword">typeof</span><span class="token operator">:</span> <span class="token builtin">symbol</span> <span class="token operator">|</span> <span class="token builtin">number</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    type<span class="token operator">:</span> ElementType<span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">// for循环中的key，不加默认用index代替</span></span>
<span class="line">    key<span class="token operator">:</span> Key<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 组件的props</span></span>
<span class="line">    props<span class="token operator">:</span> Props<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 组件ref</span></span>
<span class="line">    ref<span class="token operator">:</span> Ref<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 我们自己的特殊标记</span></span>
<span class="line">    __mark<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="fiber对象" tabindex="-1"><a class="header-anchor" href="#fiber对象"><span>fiber对象</span></a></h3><p>fiber对象是对React执行过程中元素状态的描述。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">export</span> <span class="token keyword">class</span> <span class="token class-name">FiberNode</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 元素类型，函数式组件就是函数本身</span></span>
<span class="line">    <span class="token literal-property property">type</span><span class="token operator">:</span> any<span class="token punctuation">;</span>   <span class="token comment">// div span li ul</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 组件对象类型</span></span>
<span class="line">    <span class="token literal-property property">tag</span><span class="token operator">:</span> WorkTag<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 组件初始props</span></span>
<span class="line">    <span class="token literal-property property">pendingProps</span><span class="token operator">:</span> Props<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">key</span><span class="token operator">:</span> Key<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 真实dom</span></span>
<span class="line">    <span class="token literal-property property">stateNode</span><span class="token operator">:</span> any<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">ref</span><span class="token operator">:</span> Ref<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token keyword">return</span><span class="token operator">:</span> FiberNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">sibling</span><span class="token operator">:</span> FiberNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">child</span><span class="token operator">:</span> FiberNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">index</span><span class="token operator">:</span> number<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 更新后的props状态</span></span>
<span class="line">    <span class="token literal-property property">memoizedProps</span><span class="token operator">:</span> Props <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">memoizedState</span><span class="token operator">:</span> any<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 双缓存机制</span></span>
<span class="line">    <span class="token literal-property property">alternate</span><span class="token operator">:</span> FiberNode <span class="token operator">|</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    </span>
<span class="line"></span>
<span class="line">    <span class="token comment">// 副作用标记</span></span>
<span class="line">    <span class="token literal-property property">flags</span><span class="token operator">:</span> Flags<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">subtreeFlags</span><span class="token operator">:</span> Flags<span class="token punctuation">;</span></span>
<span class="line">    <span class="token literal-property property">updateQueue</span><span class="token operator">:</span> unknown<span class="token punctuation">;</span></span>
<span class="line">    <span class="token function">constructor</span><span class="token punctuation">(</span><span class="token parameter"><span class="token literal-property property">tag</span><span class="token operator">:</span> WorkTag<span class="token punctuation">,</span> <span class="token literal-property property">pendingProps</span><span class="token operator">:</span> Props<span class="token punctuation">,</span> <span class="token literal-property property">key</span><span class="token operator">:</span> Key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token comment">// 实例</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>tag <span class="token operator">=</span> tag<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>key <span class="token operator">=</span> key<span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// HostComponent &lt;div&gt; div DOM</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>stateNode <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token comment">// FunctionComponent () =&gt; {}</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>type <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 构成树状结构</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>return <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>sibling <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>child <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>ref <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 作为工作单元</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>pendingProps <span class="token operator">=</span> pendingProps<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>memoizedProps <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>memoizedState <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>updateQueue <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>alternate <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line">        <span class="token comment">// 副作用, 更新元素的标记</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>flags <span class="token operator">=</span> NoFlags<span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">this</span><span class="token punctuation">.</span>subtreeFlags <span class="token operator">=</span> NoFlags<span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>worktag是对元素类型的进一步抽象。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">export</span> type WorkTag <span class="token operator">=</span></span>
<span class="line">    <span class="token operator">|</span> <span class="token keyword">typeof</span> FunctionComponent</span>
<span class="line">    <span class="token operator">|</span> <span class="token keyword">typeof</span> HostRoot</span>
<span class="line">    <span class="token operator">|</span> <span class="token keyword">typeof</span> HostComponent</span>
<span class="line">    <span class="token operator">|</span> <span class="token keyword">typeof</span> HostText<span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> FunctionComponent <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> HostRoot <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>   <span class="token comment">// hsotroot代表生成的中间空节点</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> HostComponent <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>   <span class="token comment">// 原生节点  div span等</span></span>
<span class="line"><span class="token comment">// &lt;div&gt;123&lt;/div&gt;</span></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">const</span> HostText <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8))])}const m=t(r,[["render",d],["__file","Reactshejiyuanli.html.vue"]]),b=JSON.parse('{"path":"/blogs/React/2023/Reactshejiyuanli.html","title":"React设计原理","lang":"en-US","frontmatter":{"title":"React设计原理","date":"2023-12-05T00:00:00.000Z","tags":["React"],"categories":["React"]},"headers":[{"level":2,"title":"React源码中的几种关键数据结构","slug":"react源码中的几种关键数据结构","link":"#react源码中的几种关键数据结构","children":[{"level":3,"title":"element对象","slug":"element对象","link":"#element对象","children":[]},{"level":3,"title":"fiber对象","slug":"fiber对象","link":"#fiber对象","children":[]}]}],"git":{"createdTime":1708180132000,"updatedTime":1731230366000,"contributors":[{"name":"Pcjmy","email":"1716045191@qq.com","commits":4}]},"filePathRelative":"blogs/React/2023/React设计原理.md"}');export{m as comp,b as data};
