import{_ as n,c as l,a as o,b as t,d as r,e as s,o as i,r as c}from"./app-Dgm3qbd6.js";const d={},p={href:"https://mp.weixin.qq.com/s/muHf0f_Rfs2v7wRmiFVD3Q",target:"_blank",rel:"noopener noreferrer"},h={href:"https://github.com/reactjs/react-codemod",target:"_blank",rel:"noopener noreferrer"},m={href:"https://github.com/cpojer/js-codemod",target:"_blank",rel:"noopener noreferrer"};function S(T,e){const a=c("ExternalLinkIcon");return i(),l("div",null,[e[3]||(e[3]=o('<h1 id="ast" tabindex="-1"><a class="header-anchor" href="#ast"><span>AST</span></a></h1><h2 id="什么是-ast" tabindex="-1"><a class="header-anchor" href="#什么是-ast"><span>什么是 AST</span></a></h2><p>在计算机科学中，抽象语法树（Abstract Syntax Tree，AST）是源代码语法结构的一种抽象表示。它以树状的形式表现编程语言的语法结构，树上的每个节点都表示源代码中的一种结构。</p><h2 id="ast-结构" tabindex="-1"><a class="header-anchor" href="#ast-结构"><span>AST 结构</span></a></h2><p>为了统一ECMAScript标准的语法表达。社区中衍生出了ESTree Spec，是目前前端所遵循的一种语法表达标准。</p><h2 id="ast-是如何生成的" tabindex="-1"><a class="header-anchor" href="#ast-是如何生成的"><span>AST 是如何生成的</span></a></h2><p>一般来讲生成AST抽象语法树都需要javaScript解析器来完成</p><p>JavaScript解析器通常可以包含四个组成部分：</p><ul><li>词法分析器（Lexical Analyser）</li><li>语法解析器（Syntax Parser）</li><li>字节码生成器（Bytecode generator）</li><li>字节码解释器（Bytecode interpreter）</li></ul><h2 id="参考资料" tabindex="-1"><a class="header-anchor" href="#参考资料"><span>参考资料</span></a></h2>',10)),t("p",null,[t("a",p,[e[0]||(e[0]=r("从Babel开始认识AST抽象语法树")),s(a)])]),t("p",null,[t("a",h,[e[1]||(e[1]=r("https://github.com/reactjs/react-codemod")),s(a)])]),t("p",null,[t("a",m,[e[2]||(e[2]=r("https://github.com/cpojer/js-codemod")),s(a)])])])}const f=n(d,[["render",S],["__file","AST.html.vue"]]),u=JSON.parse('{"path":"/blogs/Babel/AST.html","title":"AST","lang":"en-US","frontmatter":{"title":"AST","date":"2024-09-15T00:00:00.000Z","tags":["AST"],"categories":["babel"]},"headers":[{"level":2,"title":"什么是 AST","slug":"什么是-ast","link":"#什么是-ast","children":[]},{"level":2,"title":"AST 结构","slug":"ast-结构","link":"#ast-结构","children":[]},{"level":2,"title":"AST 是如何生成的","slug":"ast-是如何生成的","link":"#ast-是如何生成的","children":[]},{"level":2,"title":"参考资料","slug":"参考资料","link":"#参考资料","children":[]}],"git":{"createdTime":1726412230000,"updatedTime":1726412230000,"contributors":[{"name":"Pcjmy","email":"1716045191@qq.com","commits":1}]},"filePathRelative":"blogs/Babel/AST.md"}');export{f as comp,u as data};
