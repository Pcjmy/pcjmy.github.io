import{_ as s,c as a,a as e,o as t}from"./app-Dgm3qbd6.js";const p={};function l(i,n){return t(),a("div",null,n[0]||(n[0]=[e(`<h1 id="vue" tabindex="-1"><a class="header-anchor" href="#vue"><span>Vue</span></a></h1><h2 id="vuex-简介" tabindex="-1"><a class="header-anchor" href="#vuex-简介"><span>Vuex 简介</span></a></h2><p>Vuex 是一个专为 Vue.js 应用程序开发的<strong>状态管理模式 + 库</strong>。它采用集中式存储管理应用的所有组件的状态，并以相应的规则保证状态以一种可预测的方式发生变化。</p><p>Vuex 创建了一个全局唯一的仓库，用来存放全局的数据。</p><p>Vuex 数据管理框架如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> createStore <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;vuex&quot;</span><span class="token punctuation">;</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token function">createStore</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">state</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 用来存放数据</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">getters</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 在store对象中增加getters属性</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">mutations</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 修改state中的属性值的方法</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">actions</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 存放异步操作, actions里面的方法返回一个promise对象</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">modules</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token comment">// 每个模块拥有自己的 state、mutation、action、getter</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="vuex-作用" tabindex="-1"><a class="header-anchor" href="#vuex-作用"><span>Vuex 作用</span></a></h2><p>在开发小型项目或者功能的时候，并不需要使用到 vuex，不是所有的数据都需要存储到 vuex 中的，当某个数据需要频繁使用的时候，当某个数据在跨越父子组件，在两个毫不相关的组件之间需要通信的时候，这些时候就可以使用 vuex 了，这样会很方便</p><h2 id="action-与-mutation" tabindex="-1"><a class="header-anchor" href="#action-与-mutation"><span>action 与 mutation</span></a></h2><ul><li>action 中处理异步，mutation 不可以</li><li>mutation 做原子操作</li><li>action 可以整合多个 mutation</li></ul>`,10)]))}const o=s(p,[["render",l],["__file","Vuex.html.vue"]]),u=JSON.parse('{"path":"/blogs/Vue/2022/Vuex.html","title":"Vuex","lang":"en-US","frontmatter":{"title":"Vuex","date":"2022-03-05T00:00:00.000Z","tags":["Vue"],"categories":["Vue"]},"headers":[{"level":2,"title":"Vuex 简介","slug":"vuex-简介","link":"#vuex-简介","children":[]},{"level":2,"title":"Vuex 作用","slug":"vuex-作用","link":"#vuex-作用","children":[]},{"level":2,"title":"action 与 mutation","slug":"action-与-mutation","link":"#action-与-mutation","children":[]}],"git":{"createdTime":1669819458000,"updatedTime":1669819458000,"contributors":[{"name":"Pcjmy","email":"1716045191@qq.com","commits":1}]},"filePathRelative":"blogs/Vue/2022/Vuex.md"}');export{o as comp,u as data};
