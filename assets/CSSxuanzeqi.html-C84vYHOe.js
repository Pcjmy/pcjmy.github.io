import{_ as t,c as r,a,b as n,d as l,e as i,o as d,r as p}from"./app-Dgm3qbd6.js";const o={},c={href:"https://code.juejin.cn/pen/7124224573306273822",target:"_blank",rel:"noopener noreferrer"},u={href:"https://code.juejin.cn/pen/7124230365337616415",target:"_blank",rel:"noopener noreferrer"},h={href:"https://code.juejin.cn/pen/7124506554459504671",target:"_blank",rel:"noopener noreferrer"},v={href:"https://code.juejin.cn/pen/7124510270008852487",target:"_blank",rel:"noopener noreferrer"},m={href:"https://code.juejin.cn/pen/7124518967355375630",target:"_blank",rel:"noopener noreferrer"};function b(g,e){const s=p("ExternalLinkIcon");return d(),r("div",null,[e[5]||(e[5]=a(`<h1 id="css-选择器" tabindex="-1"><a class="header-anchor" href="#css-选择器"><span>CSS 选择器</span></a></h1><p>CSS 选择器用于选择需要设置样式的元素，主要有以下几种类型：</p><ul><li>标签选择器</li><li>ID 选择器</li><li>类选择器</li><li>伪类选择器</li><li>通配符选择器</li></ul><h2 id="标签选择器" tabindex="-1"><a class="header-anchor" href="#标签选择器"><span>标签选择器</span></a></h2><p>标签选择器会将网页内所有该标签增加相同的样式，主要用于 HTML 中定义的标签，如 body、div、p 等标签。标签选择器的语法如下。</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">标签</span> <span class="token punctuation">{</span></span>
<span class="line">    CSS样式</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面给出标签选择器的实例。</p>`,7)),n("p",null,[n("a",c,[e[0]||(e[0]=l("示例 1")),i(s)])]),e[6]||(e[6]=a(`<h2 id="id-选择器" tabindex="-1"><a class="header-anchor" href="#id-选择器"><span>ID 选择器</span></a></h2><p>ID 选择器使用 HTML 元素的 ID 属性来选择特定元素。元素的 ID 是自定义的，并且也是唯一的。ID 选择器的语法如下。</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">#ID</span> <span class="token punctuation">{</span></span>
<span class="line">    CSS样式</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面给出 ID 选择器的实例。</p>`,4)),n("p",null,[n("a",u,[e[1]||(e[1]=l("示例 2")),i(s)])]),e[7]||(e[7]=a(`<h2 id="类选择器" tabindex="-1"><a class="header-anchor" href="#类选择器"><span>类选择器</span></a></h2><p>类选择器选择具有特定 class 属性的 HTML 元素。同一个标签可以具有多个类选择器。类选择器的语法如下。</p><div class="language-css line-numbers-mode" data-highlighter="prismjs" data-ext="css" data-title="css"><pre class="language-css"><code><span class="line"><span class="token selector">.类名</span> <span class="token punctuation">{</span></span>
<span class="line">    CSS样式</span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>下面给出类选择器的实例。在此实例中定义了有关形状的三个类 square、rectange 和 circle，以及有关颜色的三个类 red、blue、orange，每个 div 都具有两个类。</p>`,4)),n("p",null,[n("a",h,[e[2]||(e[2]=l("示例 3")),i(s)])]),e[8]||(e[8]=a('<h2 id="伪类选择器" tabindex="-1"><a class="header-anchor" href="#伪类选择器"><span>伪类选择器</span></a></h2><p>伪类选择器用于选择处于特定状态的元素。伪类名称是自定义的，以冒号开头。伪类需要与其他选择器结合使用。常见的伪类选择器如下。</p><ul><li><code>:hover</code>鼠标悬停激活</li><li><code>:focus</code>选定元素激活</li><li><code>:active</code>鼠标点击激活</li><li><code>:link</code>链接访问前</li><li><code>:visited</code>链接访问后</li></ul><p>下面给出伪类选择器的实例。当鼠标悬停在下面的方块时，方块会缓慢放大到 1.5 倍大小。当鼠标点击下面的输入框时，输入框长度变为原来的 2 倍，并且显示背景颜色。</p>',4)),n("p",null,[n("a",v,[e[3]||(e[3]=l("示例 4")),i(s)])]),e[9]||(e[9]=a('<h2 id="通配符选择器" tabindex="-1"><a class="header-anchor" href="#通配符选择器"><span>通配符选择器</span></a></h2><p>通配符选择器用于选择指定类型的 HTML 元素。通配符选择器是功能最强大的选择器。</p><ul><li><code>*</code>选择所有标签</li><li><code>[attribute]</code>选择具有某个属性的所有标签</li><li><code>[attribute:value]</code>选择属性为 attribute 且值为 value 的所有标签</li></ul><p>下面给出通配符选择器的实例。在此实例中定义了 5 个 div，使用通配符选择器定义了所有文字的样式，所有 id 为 app 的元素的样式以及所有含有 class 属性的元素的样式。</p>',4)),n("p",null,[n("a",m,[e[4]||(e[4]=l("示例 5")),i(s)])]),e[10]||(e[10]=n("p",null,"除了上面介绍的 5 种 CSS 选择器，还有复合选择器、伪元素选择器等选择器。在使用选择器时需要注意选择器的优先级，优先级关系有：ID 选择器>类与伪类选择器>标签选择器>通配符选择器。当一个 HTML 元素使用不同优先级的选择器，页面会显示高优先级选择器的样式。",-1))])}const f=t(o,[["render",b],["__file","CSSxuanzeqi.html.vue"]]),k=JSON.parse('{"path":"/blogs/CSS/2021/CSSxuanzeqi.html","title":"CSS选择器","lang":"en-US","frontmatter":{"title":"CSS选择器","date":"2021-07-15T00:00:00.000Z","tags":["CSS"],"categories":["CSS"]},"headers":[{"level":2,"title":"标签选择器","slug":"标签选择器","link":"#标签选择器","children":[]},{"level":2,"title":"ID 选择器","slug":"id-选择器","link":"#id-选择器","children":[]},{"level":2,"title":"类选择器","slug":"类选择器","link":"#类选择器","children":[]},{"level":2,"title":"伪类选择器","slug":"伪类选择器","link":"#伪类选择器","children":[]},{"level":2,"title":"通配符选择器","slug":"通配符选择器","link":"#通配符选择器","children":[]}],"git":{"createdTime":1669821549000,"updatedTime":1669821549000,"contributors":[{"name":"Pcjmy","email":"1716045191@qq.com","commits":1}]},"filePathRelative":"blogs/CSS/2021/CSS选择器.md"}');export{f as comp,k as data};
