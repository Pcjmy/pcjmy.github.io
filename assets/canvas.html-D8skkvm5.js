import{_ as e,c as l,a as t,o as i}from"./app-Dgm3qbd6.js";const p={};function n(s,a){return i(),l("div",null,a[0]||(a[0]=[t('<h1 id="canvas" tabindex="-1"><a class="header-anchor" href="#canvas"><span>canvas</span></a></h1><h2 id="canvas是什么" tabindex="-1"><a class="header-anchor" href="#canvas是什么"><span>canvas是什么</span></a></h2><p>Canvas是HTML5中的一个重要元素，它可以用JavaScript在网页上绘制图像，制作动画等。Canvas的使用非常灵活，可以用于数据可视化、游戏开发、图像处理等多个领域。</p><h2 id="常用api" tabindex="-1"><a class="header-anchor" href="#常用api"><span>常用API</span></a></h2><h3 id="矩形绘制" tabindex="-1"><a class="header-anchor" href="#矩形绘制"><span>矩形绘制</span></a></h3><p>fillRect(x, y, width, height) 填充矩形</p><p>strokeRect(x, y, width, height) 表变矩形</p><h3 id="路径绘制" tabindex="-1"><a class="header-anchor" href="#路径绘制"><span>路径绘制</span></a></h3><p>beginPath() 创建新的路径组</p><p>closePath() 闭合路径</p><p>stroke() 路径描边</p><p>fill() 路径范围填充</p><p>moveTo() 移动起笔点</p><p>lineTo() 绘制直线</p><p>arc() 绘制弧线（圆）</p><p>arcTo() 绘制圆角</p><p>quadraticCurveTo(cp1x, cp1y, x, y) 绘制二次贝塞尔曲线</p><p>bezierCurveTo(cp1x, cp1y, cp2x, cp2y, x, y) 绘制三次贝塞尔曲线</p><p>rect(x, y, width, height) 绘制矩形路径（会自动调用moveTo方法）</p><p>path2D 使用路径相关数据</p><h3 id="清空画布" tabindex="-1"><a class="header-anchor" href="#清空画布"><span>清空画布</span></a></h3><p>clearRect(x, y, width, height)</p><h3 id="样式修改" tabindex="-1"><a class="header-anchor" href="#样式修改"><span>样式修改</span></a></h3><p>fillStyle = color 填充颜色</p><p>strokeStyle = color 描边颜色</p><p>globalAlpha = transparencyValue 全局透明度</p><p>lineWidth = value 路径宽度</p><p>lineCap = type 路径两头的帽子形态</p><p>lineJoin = type 路径连接点形态</p><p>miterLimit = value 限制当两条线相交时交接处最大长度；所谓交接处长度（斜接长度）是指线条交接处内角顶点到外角顶点的长度。</p><p>getLineDash() 返回一个包含当前虚线样式，长度为非负偶数的数组</p><p>setLineDash(segments) 设置当前虚线样式</p><p>lineDashOffset = value 虚线样式的起始偏移量</p><h3 id="绘制文字" tabindex="-1"><a class="header-anchor" href="#绘制文字"><span>绘制文字</span></a></h3><p>fillText(text, x, y [, maxWidth])</p><p>strokeText(text, x, y [, maxWidth])</p><h2 id="路径的绘制逻辑" tabindex="-1"><a class="header-anchor" href="#路径的绘制逻辑"><span>路径的绘制逻辑</span></a></h2><ol><li>绘制路径时一定要注意 这个笔在哪里 哪里是起笔点 绘制完后笔停留在哪里 非常重要，路径的数据在整个绘制过程中是连续的</li><li>路径 显示绘制隐形的 最后要上色</li><li>绘制路径的逻辑是特有的 其他的比如 矩形 文字 没有那个起笔落笔的逻辑</li></ol>',38)]))}const h=e(p,[["render",n],["__file","canvas.html.vue"]]),r=JSON.parse('{"path":"/blogs/JavaScript/2023/canvas.html","title":"canvas","lang":"en-US","frontmatter":{"title":"canvas","date":"2023-01-06T00:00:00.000Z","tags":["JavaScript"],"categories":["JavaScript"]},"headers":[{"level":2,"title":"canvas是什么","slug":"canvas是什么","link":"#canvas是什么","children":[]},{"level":2,"title":"常用API","slug":"常用api","link":"#常用api","children":[{"level":3,"title":"矩形绘制","slug":"矩形绘制","link":"#矩形绘制","children":[]},{"level":3,"title":"路径绘制","slug":"路径绘制","link":"#路径绘制","children":[]},{"level":3,"title":"清空画布","slug":"清空画布","link":"#清空画布","children":[]},{"level":3,"title":"样式修改","slug":"样式修改","link":"#样式修改","children":[]},{"level":3,"title":"绘制文字","slug":"绘制文字","link":"#绘制文字","children":[]}]},{"level":2,"title":"路径的绘制逻辑","slug":"路径的绘制逻辑","link":"#路径的绘制逻辑","children":[]}],"git":{"createdTime":1705679570000,"updatedTime":1705679570000,"contributors":[{"name":"Pcjmy","email":"1716045191@qq.com","commits":1}]},"filePathRelative":"blogs/JavaScript/2023/canvas.md"}');export{h as comp,r as data};
